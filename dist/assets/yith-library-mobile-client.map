{"version":3,"sources":["vendor/ember-cli/app-prefix.js","yith-library-mobile-client/acceptance-tests/main.js","yith-library-mobile-client/adapters/application.js","yith-library-mobile-client/app.js","yith-library-mobile-client/components/app-version.js","yith-library-mobile-client/components/secret-revealer.js","yith-library-mobile-client/controllers/application.js","yith-library-mobile-client/controllers/array.js","yith-library-mobile-client/controllers/first-time.js","yith-library-mobile-client/controllers/object.js","yith-library-mobile-client/controllers/secret.js","yith-library-mobile-client/controllers/secrets.js","yith-library-mobile-client/controllers/secrets/drawer.js","yith-library-mobile-client/controllers/secrets/tags.js","yith-library-mobile-client/helpers/current-tag.js","yith-library-mobile-client/initializers/app-version.js","yith-library-mobile-client/initializers/export-application-global.js","yith-library-mobile-client/main.js","yith-library-mobile-client/models/account.js","yith-library-mobile-client/models/secret.js","yith-library-mobile-client/models/tag.js","yith-library-mobile-client/router.js","yith-library-mobile-client/routes/application.js","yith-library-mobile-client/routes/first-time.js","yith-library-mobile-client/routes/index.js","yith-library-mobile-client/routes/secret.js","yith-library-mobile-client/routes/secrets-drawer.js","yith-library-mobile-client/routes/secrets.js","yith-library-mobile-client/routes/secrets/drawer.js","yith-library-mobile-client/routes/secrets/tags.js","yith-library-mobile-client/serializers/application.js","yith-library-mobile-client/services/auth.js","yith-library-mobile-client/services/settings.js","yith-library-mobile-client/services/sync.js","yith-library-mobile-client/templates/application.js","yith-library-mobile-client/templates/components/secret-revealer.js","yith-library-mobile-client/templates/first-time.js","yith-library-mobile-client/templates/loading.js","yith-library-mobile-client/templates/secret.js","yith-library-mobile-client/templates/secrets.js","yith-library-mobile-client/templates/secrets/drawer.js","yith-library-mobile-client/templates/secrets/tags.js","yith-library-mobile-client/tests/adapters/application.jshint.js","yith-library-mobile-client/tests/app.jshint.js","yith-library-mobile-client/tests/components/secret-revealer.jshint.js","yith-library-mobile-client/tests/controllers/application.jshint.js","yith-library-mobile-client/tests/controllers/first-time.jshint.js","yith-library-mobile-client/tests/controllers/secret.jshint.js","yith-library-mobile-client/tests/controllers/secrets.jshint.js","yith-library-mobile-client/tests/controllers/secrets/drawer.jshint.js","yith-library-mobile-client/tests/controllers/secrets/tags.jshint.js","yith-library-mobile-client/tests/helpers/current-tag.jshint.js","yith-library-mobile-client/tests/helpers/resolver.js","yith-library-mobile-client/tests/helpers/resolver.jshint.js","yith-library-mobile-client/tests/helpers/start-app.js","yith-library-mobile-client/tests/helpers/start-app.jshint.js","yith-library-mobile-client/tests/integration/components/secret-revealer-test.js","yith-library-mobile-client/tests/integration/components/secret-revealer-test.jshint.js","yith-library-mobile-client/tests/integration/sync-test.js","yith-library-mobile-client/tests/integration/sync-test.jshint.js","yith-library-mobile-client/tests/main.jshint.js","yith-library-mobile-client/tests/models/account.jshint.js","yith-library-mobile-client/tests/models/secret.jshint.js","yith-library-mobile-client/tests/models/tag.jshint.js","yith-library-mobile-client/tests/router.jshint.js","yith-library-mobile-client/tests/routes/application.jshint.js","yith-library-mobile-client/tests/routes/first-time.jshint.js","yith-library-mobile-client/tests/routes/index.jshint.js","yith-library-mobile-client/tests/routes/secret.jshint.js","yith-library-mobile-client/tests/routes/secrets-drawer.jshint.js","yith-library-mobile-client/tests/routes/secrets.jshint.js","yith-library-mobile-client/tests/routes/secrets/drawer.jshint.js","yith-library-mobile-client/tests/routes/secrets/tags.jshint.js","yith-library-mobile-client/tests/serializers/application.jshint.js","yith-library-mobile-client/tests/services/auth.jshint.js","yith-library-mobile-client/tests/services/settings.jshint.js","yith-library-mobile-client/tests/services/sync.jshint.js","yith-library-mobile-client/tests/test-helper.js","yith-library-mobile-client/tests/test-helper.jshint.js","yith-library-mobile-client/tests/test-loader.js","yith-library-mobile-client/tests/test-loader.jshint.js","yith-library-mobile-client/tests/unit/adapters/application-test.js","yith-library-mobile-client/tests/unit/adapters/application-test.jshint.js","yith-library-mobile-client/tests/unit/controllers/first-time-test.js","yith-library-mobile-client/tests/unit/controllers/first-time-test.jshint.js","yith-library-mobile-client/tests/unit/services/auth-test.js","yith-library-mobile-client/tests/unit/services/auth-test.jshint.js","yith-library-mobile-client/tests/unit/services/settings-test.js","yith-library-mobile-client/tests/unit/services/settings-test.jshint.js","yith-library-mobile-client/tests/unit/services/sync-test.js","yith-library-mobile-client/tests/unit/services/sync-test.jshint.js","yith-library-mobile-client/tests/utils/prefix-event.jshint.js","yith-library-mobile-client/tests/utils/snake-case-to-camel-case.jshint.js","yith-library-mobile-client/tests/views/secrets.jshint.js","yith-library-mobile-client/utils/prefix-event.js","yith-library-mobile-client/utils/snake-case-to-camel-case.js","yith-library-mobile-client/views/secrets.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('yith-library-mobile-client/acceptance-tests/main', ['exports', 'ember-cli-sri/acceptance-tests/main'], function (exports, main) {\n\n\t'use strict';\n\n\n\n\texports['default'] = main['default'];\n\n});","define('yith-library-mobile-client/adapters/application', ['exports', 'ember-localforage-adapter/adapters/localforage'], function (exports, LFAdapter) {\n\n    'use strict';\n\n    exports['default'] = LFAdapter['default'].extend({\n        namespace: 'YithLibrary'\n    });\n\n});","define('yith-library-mobile-client/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'yith-library-mobile-client/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModeulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    customEvents: {\n      'animationend animationEnd webkitAnimationEnd mozAnimationEnd MSAnimationEnd oAnimationEnd': 'animationEnd',\n      'transitionend transitionEnd webkitTransitionEnd mozTransitionEnd MSTransitionEnd oTransitionEnd': 'transitionEnd'\n    }\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('yith-library-mobile-client/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'yith-library-mobile-client/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('yith-library-mobile-client/components/secret-revealer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'form',\n        classNames: ['secret-revealer'],\n\n        attributeBindings: ['autocomplete'],\n        autocomplete: 'off',\n\n        buttonClass: 'recommend',\n        buttonText: 'Reveal secret',\n\n        decryptedSecret: null,\n\n        click: function click(event) {\n            var $target = Ember['default'].$(event.target);\n\n            if ($target.is('button')) {\n                this.buttonClicked();\n            }\n\n            // Don't bubble up any more events\n            return false;\n        },\n\n        buttonClicked: function buttonClicked() {\n            var $masterPasswordInput = null,\n                masterPasswordValue = null,\n                secret = '';\n\n            if (this.get('decryptedSecret') !== null) {\n                this.hideSecret();\n            } else {\n\n                $masterPasswordInput = this.$('input[type=password]');\n                masterPasswordValue = $masterPasswordInput.val();\n                $masterPasswordInput.val('');\n                secret = this.get('secret');\n                try {\n                    this.revealSecret(sjcl.decrypt(masterPasswordValue, secret));\n                    masterPasswordValue = null;\n                } catch (err) {\n                    this.badMasterPassword();\n                }\n            }\n        },\n\n        hideSecret: function hideSecret() {\n            this.stopTimer();\n\n            this.set('buttonText', 'Reveal secret');\n            this.set('buttonClass', 'recommend');\n            this.set('decryptedSecret', null);\n        },\n\n        badMasterPassword: function badMasterPassword() {\n            this.set('buttonText', 'Wrong master password, try again');\n            this.set('buttonClass', 'danger');\n            this.$('input[type=password]').focus();\n        },\n\n        revealSecret: function revealSecret(secret) {\n            this.set('buttonText', 'Hide secret');\n            this.set('buttonClass', 'recommend');\n            this.set('decryptedSecret', secret);\n\n            Ember['default'].run.scheduleOnce('afterRender', this, function () {\n                this.$('input[type=text]').focus().select();\n                this.startTimer();\n            });\n        },\n\n        startTimer: function startTimer() {\n            this.start = new Date();\n\n            this.totalTime = this.getTotalTime();\n\n            this.timer = window.requestAnimationFrame(this.tick.bind(this));\n        },\n\n        stopTimer: function stopTimer() {\n            if (this.timer) {\n                window.cancelAnimationFrame(this.timer);\n            }\n        },\n\n        getTotalTime: function getTotalTime() {\n            return 60;\n        },\n\n        tick: function tick() {\n            var $timer = this.$('svg'),\n                width = $timer.width(),\n                width2 = width / 2,\n                radius = width * 0.45,\n                now = new Date(),\n                elapsed = (now - this.start) / 1000.0,\n                completion = elapsed / this.totalTime,\n                endAngle = 360 * completion,\n                endPoint = this.polarToCartesian(width2, width2, radius, endAngle),\n                arcSweep = endAngle <= 180 ? '1' : '0',\n                d = ['M', width2, width2 - radius, 'A', radius, radius, 0, arcSweep, 0, endPoint.x, endPoint.y, 'L', width2, width2, 'Z'].join(' ');\n\n            this.$('path').attr('d', d);\n\n            // If completion is 100% hide the secret\n            if (completion >= 1) {\n                this.hideSecret();\n            } else {\n                this.timer = window.requestAnimationFrame(this.tick.bind(this));\n            }\n        },\n\n        polarToCartesian: function polarToCartesian(x, y, radius, degrees) {\n            var radians = (degrees - 90) * Math.PI / 180.0;\n            return {\n                x: x + radius * Math.cos(radians),\n                y: y + radius * Math.sin(radians)\n            };\n        },\n\n        didInsertElement: function didInsertElement() {\n            this.$('input').focus();\n        },\n\n        willDestroy: function willDestroy() {\n            this.hideSecret();\n        }\n\n    });\n\n});","define('yith-library-mobile-client/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n\n        // The active Account object will be set as the model for this controller\n\n    });\n\n});","define('yith-library-mobile-client/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('yith-library-mobile-client/controllers/first-time', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        application: Ember['default'].inject.controller(),\n        step: 0,\n        auth: Ember['default'].inject.service(),\n        settings: Ember['default'].inject.service(),\n        sync: Ember['default'].inject.service(),\n\n        showInstructions: (function () {\n            return this.get('step') === 0;\n        }).property('step'),\n\n        isConnectingToServer: (function () {\n            return this.get('step') === 1;\n        }).property('step'),\n\n        isServerConnected: (function () {\n            return this.get('step') > 1;\n        }).property('step'),\n\n        isGettingAccountInformation: (function () {\n            return this.get('step') === 2;\n        }).property('step'),\n\n        isAccountInformationRetrieved: (function () {\n            return this.get('step') > 2;\n        }).property('step'),\n\n        accountDisabled: (function () {\n            return this.get('step') < 2 ? 'true' : 'false';\n        }).property('step'),\n\n        isGettingSecrets: (function () {\n            return this.get('step') === 3;\n        }).property('step'),\n\n        areSecretsRetrieved: (function () {\n            return this.get('step') > 3;\n        }).property('step'),\n\n        secretsDisabled: (function () {\n            return this.get('step') < 3 ? 'true' : 'false';\n        }).property('step'),\n\n        isFinished: (function () {\n            return this.get('step') === 4;\n        }).property('step'),\n\n        connectToServer: function connectToServer() {\n            var controller = this,\n                sync = this.get('sync'),\n                auth = this.get('auth'),\n                clientId = auth.get('clientId'),\n                settings = this.get('settings'),\n                serverBaseUrl = settings.getSetting('serverBaseUrl'),\n                accessToken = null;\n\n            this.incrementProperty('step');\n\n            auth.authorize(serverBaseUrl).then(function () {\n                accessToken = auth.get('accessToken');\n                controller.incrementProperty('step');\n                return sync.fetchUserInfo(accessToken, serverBaseUrl, clientId);\n            }).then(function (user) {\n                settings.setSetting('lastAccount', user.get('id'));\n                controller.get('application').set('model', user);\n                controller.incrementProperty('step');\n                return sync.fetchSecrets(accessToken, serverBaseUrl, clientId);\n            }).then(function () {\n                settings.setSetting('lastSync', new Date());\n                controller.incrementProperty('step');\n            });\n        },\n\n        actions: {\n            connect: function connect() {\n                Ember['default'].run.next(this, function () {\n                    this.connectToServer();\n                });\n            },\n\n            secrets: function secrets() {\n                this.transitionToRoute('secrets.index');\n            }\n        }\n    });\n\n});","define('yith-library-mobile-client/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('yith-library-mobile-client/controllers/secret', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n\n        position: 'current'\n\n    });\n\n});","define('yith-library-mobile-client/controllers/secrets', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        auth: Ember['default'].inject.service('auth'),\n        settings: Ember['default'].inject.service('settings'),\n        sync: Ember['default'].inject.service('sync'),\n        queryParams: ['tag'],\n        sortProperties: ['service', 'account'],\n        sortAscending: true,\n        position: 'current',\n        state: '',\n        tag: '',\n        query: '',\n        isSyncing: false,\n        isAuthorizing: false,\n        statusMessage: null,\n        isOnline: window.navigator.onLine,\n\n        secrets: (function () {\n            var tag = this.get('tag'),\n                query = this.get('query'),\n                content = this.get('content').sortBy('service', 'account');\n\n            return content.filter(function (item) {\n                return item.matches(tag, query);\n            });\n        }).property('content.isLoaded', 'tag', 'query'),\n\n        secretsCount: (function () {\n            return this.get('secrets').length;\n        }).property('secrets'),\n\n        secretsNoun: (function () {\n            var secretsCount = this.get('secretsCount');\n            return secretsCount === 1 ? 'secret' : 'secrets';\n        }).property('secretsCount'),\n\n        statusClass: (function () {\n            var msg = this.get('statusMessage');\n            if (msg === null) {\n                return 'hidden';\n            } else if (msg === '') {\n                return '';\n            } else {\n                return 'onviewport';\n            }\n        }).property('statusMessage'),\n\n        showMessage: function showMessage(msg) {\n            this.set('statusMessage', msg);\n            Ember['default'].run.later(this, function () {\n                this.set('statusMessage', '');\n                Ember['default'].run.later(this, function () {\n                    this.set('statusMessage', null);\n                }, 500);\n            }, 2500);\n        },\n\n        syncFromServer: function syncFromServer() {\n            var controller = this,\n                auth = this.get('auth'),\n                sync = this.get('sync'),\n                settings = this.get('settings'),\n                accessToken = null,\n                clientId = null,\n                serverBaseUrl = null;\n\n            if (this.get('isSyncing') === true) {\n                return;\n            } else {\n                this.set('isSyncing', true);\n\n                accessToken = auth.get('accessToken');\n                clientId = auth.get('clientId');\n                serverBaseUrl = settings.getSetting('serverBaseUrl');\n\n                sync.fetchSecrets(accessToken, serverBaseUrl, clientId).then(function (results) {\n                    var msg = [],\n                        length;\n                    settings.setSetting('lastSync', new Date());\n                    controller.set('isSyncing', false);\n                    length = results.secrets.length;\n                    if (length > 0) {\n                        msg.push('' + length);\n                        msg.push(length > 1 ? 'secrets have' : 'secret has');\n                        msg.push('been succesfully updated');\n                    }\n                    controller.showMessage(msg.join(' '));\n                });\n            }\n        },\n\n        authorizeInServer: function authorizeInServer() {\n            var controller = this,\n                auth = this.get('auth'),\n                settings = this.get('settings'),\n                serverBaseUrl = null;\n\n            if (this.get('isAuthorizing') === true) {\n                return;\n            } else {\n                this.set('isAuthorizing', true);\n\n                serverBaseUrl = settings.getSetting('serverBaseUrl');\n                auth.authorize(serverBaseUrl).then(function () {\n                    controller.set('isAuthorizing', false);\n                    controller.showMessage('You have succesfully logged in');\n                });\n            }\n        },\n\n        logout: function logout() {\n            var self = this,\n                settings = this.get('settings'),\n                sync = this.get('sync'),\n                auth = this.get('auth');\n\n            auth.deleteToken();\n            settings.deleteSetting('lastAccount');\n            sync.deleteAccount().then(function () {\n                self.transitionToRoute('firstTime');\n            });\n        },\n\n        actions: {\n\n            clearQuery: function clearQuery() {\n                this.set('query', '');\n            },\n\n            offline: function offline() {\n                this.set('isOnline', false);\n            },\n\n            online: function online() {\n                this.set('isOnline', true);\n            }\n\n        }\n    });\n\n});","define('yith-library-mobile-client/controllers/secrets/drawer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        application: Ember['default'].inject.controller(),\n        secrets: Ember['default'].inject.controller(),\n        sortProperties: ['count:desc'],\n        sortedTags: Ember['default'].computed.sort('content', 'sortProperties'),\n        tagsToDisplay: 5,\n        tag: Ember['default'].computed.alias('secrets.tag'),\n\n        accountDisplayName: (function () {\n            return this.get('application.model.displayName');\n        }).property('application.model.displayName'),\n\n        selectedTagCount: (function () {\n            var tag = this.get('sortedTags').findBy('name', this.get('tag'));\n            if (tag) {\n                return tag.get('count');\n            } else {\n                return 0;\n            }\n        }).property('sortedTags.[]', 'tag'),\n\n        mostUsedTags: (function () {\n            var tags = this.get('sortedTags');\n            var mostUsed = tags.slice(0, this.get('tagsToDisplay'));\n            var selectedTag = this.get('tag');\n            var foundSelectedTag = false;\n            var wrapped = mostUsed.map(function (element) {\n                var name = element.get('name');\n                if (name === selectedTag) {\n                    foundSelectedTag = true;\n                }\n                return {\n                    'name': name,\n                    'count': element.get('count'),\n                    'selectTag': name === selectedTag ? '' : name\n                };\n            });\n            if (!foundSelectedTag && selectedTag !== '') {\n                wrapped.pop();\n                wrapped.push({\n                    'name': selectedTag,\n                    'count': this.get('selectedTagCount'),\n                    'selectTag': ''\n                });\n            }\n            return wrapped;\n        }).property('selectedTagCount', 'sortedTags.[]', 'tag', 'tagsToDisplay'),\n\n        hasMoreTags: (function () {\n            return this.get('sortedTags').length > this.get('tagsToDisplay');\n        }).property('sortedTags.[]', 'tagsToDisplay'),\n\n        syncButtonDisabled: (function () {\n            return this.get('secrets.isSyncing') || !this.get('secrets.isOnline');\n        }).property('secrets.isSyncing', 'secrets.isOnline'),\n\n        loginButtonDisabled: (function () {\n            return !this.get('isOnline');\n        }).property('secrets.isOnline'),\n\n        actions: {\n            login: function login() {\n                this.transitionToRoute('secrets');\n                Ember['default'].run.next(this, function () {\n                    this.get('secrets').authorizeInServer();\n                });\n            },\n\n            sync: function sync() {\n                this.transitionToRoute('secrets');\n                Ember['default'].run.next(this, function () {\n                    this.get('secrets').syncFromServer();\n                });\n            },\n\n            logout: function logout() {\n                this.transitionToRoute('secrets');\n                Ember['default'].run.next(this, function () {\n                    this.get('secrets').logout();\n                });\n            }\n        }\n\n    });\n\n});","define('yith-library-mobile-client/controllers/secrets/tags', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        tagsSortProperties: ['name:asc'],\n        sortedTags: Ember['default'].computed.sort('content', 'tagsSortProperties'),\n        actions: {\n            selectTag: function selectTag(tagName) {\n                this.transitionToRoute('secrets', { queryParams: { tag: tagName } });\n            },\n\n            cancel: function cancel() {\n                this.transitionToRoute('secrets');\n            }\n        }\n    });\n\n});","define('yith-library-mobile-client/helpers/current-tag', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Helper.helper(function (params) {\n        var tagName = params[0],\n            selectedTag = params[1];\n        return tagName === selectedTag ? '*' : '';\n    });\n\n});","define('yith-library-mobile-client/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'yith-library-mobile-client/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('yith-library-mobile-client/initializers/export-application-global', ['exports', 'ember', 'yith-library-mobile-client/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('yith-library-mobile-client/main', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n\n\n  exports['default'] = bootApp;\n  /* global requirejs, require */\n  function bootApp(prefix, attributes) {\n    var App = require(prefix + '/app')['default'];\n    var initializersRegExp = new RegExp(prefix + '/initializers');\n\n    Ember['default'].keys(requirejs._eak_seen).filter(function (key) {\n      return initializersRegExp.test(key);\n    }).forEach(function (moduleName) {\n      var module = require(moduleName, null, null, true);\n      if (!module) {\n        throw new Error(moduleName + ' must export an initializer.');\n      }\n      App.initializer(module['default']);\n    });\n\n    return App.create(attributes || {});\n  }\n\n});","define('yith-library-mobile-client/models/account', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        email: DS['default'].attr('string'),\n        firstName: DS['default'].attr('string'),\n        lastName: DS['default'].attr('string'),\n        screenName: DS['default'].attr('string'),\n\n        fullName: (function () {\n            var firstName = this.get('firstName'),\n                lastName = this.get('lastName'),\n                parts = [];\n\n            if (firstName) {\n                parts.push(firstName);\n            }\n            if (lastName) {\n                parts.push(lastName);\n            }\n            return parts.join(' ');\n        }).property('firstName', 'lastName'),\n\n        displayName: (function () {\n            var screenName = this.get('screenName'),\n                fullName = '';\n\n            if (screenName) {\n                return screenName;\n            } else {\n                fullName = this.get('fullName');\n                if (fullName) {\n                    return fullName;\n                } else {\n                    return this.get('email');\n                }\n            }\n        }).property('screenName', 'fullName', 'email')\n\n    });\n\n});","define('yith-library-mobile-client/models/secret', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        service: DS['default'].attr('string'),\n        account: DS['default'].attr('string'),\n        secret: DS['default'].attr('string'),\n        notes: DS['default'].attr('string'),\n        tags: DS['default'].attr('string'),\n\n        matches: function matches(tag, query) {\n            var tagMatch = tag === '',\n                queryMatch = query === '',\n                tags = '';\n            if (!tagMatch) {\n                tags = this.get('tags');\n                if (tags) {\n                    tagMatch = tags.indexOf(tag) !== -1;\n                }\n            }\n            if (!queryMatch) {\n                query = query.toLowerCase();\n                queryMatch = this.get('service').toLowerCase().indexOf(query) !== -1 || this.get('account').toLowerCase().indexOf(query) !== -1;\n            }\n            return tagMatch && queryMatch;\n        }\n    });\n\n});","define('yith-library-mobile-client/models/tag', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr('string'),\n        count: DS['default'].attr('number')\n    });\n\n});","define('yith-library-mobile-client/router', ['exports', 'ember', 'yith-library-mobile-client/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.route('firstTime', { path: '/first-time' });\n        this.resource('secrets', { path: '/secrets' }, function () {\n            this.resource('secret', { path: '/:secret_id' });\n            this.route('tags', { path: '/tags' });\n            this.route('drawer', { path: '/drawer' });\n        });\n    });\n\n    exports['default'] = Router;\n\n});","define('yith-library-mobile-client/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        settings: Ember['default'].inject.service('settings'),\n\n        model: function model() {\n            var settings = this.get('settings'),\n                lastAccount = settings.getSetting('lastAccount');\n            if (lastAccount) {\n                return this.store.findRecord('account', lastAccount);\n            } else {\n                return null;\n            }\n        },\n\n        afterModel: function afterModel(model) {\n            if (model === null) {\n                this.transitionTo('firstTime');\n            }\n        }\n    });\n\n});","define('yith-library-mobile-client/routes/first-time', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('yith-library-mobile-client/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        setupController: function setupController() {\n            this.transitionTo('secrets');\n        }\n\n    });\n\n});","define('yith-library-mobile-client/routes/secret', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        transitionToSecrets: null,\n\n        setupController: function setupController(controller, model) {\n            this._super(controller, model);\n            var secretsController = this.controllerFor('secrets');\n            if (secretsController.get('position') !== 'left') {\n                secretsController.set('position', 'left');\n            }\n            controller.set('position', 'current');\n        },\n\n        actions: {\n            willTransition: function willTransition(transition) {\n                var secretsController = this.controllerFor('secrets');\n                if (transition.targetName === 'secrets.index') {\n                    if (secretsController.get('position') === 'left') {\n                        secretsController.set('position', 'current');\n                        this.controller.set('position', 'right');\n                        this.set('transitionToSecrets', transition);\n                        transition.abort();\n                        return false;\n                    }\n                } else if (transition.targetName === 'secret') {\n                    secretsController.set('position', 'left');\n                    this.controller.set('position', 'current');\n                }\n\n                return true;\n            },\n\n            finishTransition: function finishTransition() {\n                var transition = this.get('transitionToSecrets');\n                if (transition) {\n                    this.set('transitionToSecrets', null);\n                    transition.retry();\n                }\n            }\n        }\n\n    });\n\n});","define('yith-library-mobile-client/routes/secrets-drawer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function model() {\n            return this.store.findAll('tag');\n        },\n\n        renderTemplate: function renderTemplate() {\n            this.render({ outlet: 'drawer' });\n        }\n\n    });\n\n});","define('yith-library-mobile-client/routes/secrets', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        setupController: function setupController(controller, model) {\n            this._super(controller, model);\n            controller.set('state', '');\n        },\n\n        model: function model() {\n            return this.store.findAll('secret');\n        },\n\n        actions: {\n            willTransition: function willTransition(transition) {\n                if (transition.targetName === 'secret') {\n                    this.controller.set('position', 'left');\n                } else if (transition.targetName === 'secrets.index') {\n                    this.controller.set('position', 'current');\n                    this.controller.set('state', '');\n                }\n                return true;\n            }\n\n        }\n\n    });\n\n});","define('yith-library-mobile-client/routes/secrets/drawer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        transitionToSecrets: null,\n\n        setupController: function setupController(controller, model) {\n            this._super(controller, model);\n            this.controllerFor('secrets').set('state', 'drawer-opened');\n        },\n\n        model: function model() {\n            return this.store.findAll('tag');\n        },\n\n        renderTemplate: function renderTemplate() {\n            this.render({ outlet: 'drawer' });\n        },\n\n        actions: {\n            willTransition: function willTransition(transition) {\n                var secretsController = this.controllerFor('secrets');\n                if (transition.targetName === 'secrets.index') {\n                    // when the transition is retried (see finishTransition)\n                    // this if condition will be false\n                    if (secretsController.get('state') === 'drawer-opened') {\n                        secretsController.set('state', '');\n                        this.set('transitionToSecrets', transition);\n\n                        // abort the transition until the CSS transition finishes\n                        transition.abort();\n                        return false;\n                    }\n                }\n                return true;\n            },\n\n            finishTransition: function finishTransition() {\n                var transition = this.get('transitionToSecrets');\n                if (transition) {\n                    this.set('transitionToSecrets', null);\n                    transition.retry();\n                }\n            }\n        }\n\n    });\n\n});","define('yith-library-mobile-client/routes/secrets/tags', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function model() {\n            return this.store.findAll('tag');\n        }\n\n    });\n\n});","define('yith-library-mobile-client/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].IndexedDBSerializer.extend();\n\n});","define('yith-library-mobile-client/services/auth', ['exports', 'ember', 'yith-library-mobile-client/config/environment', 'yith-library-mobile-client/utils/snake-case-to-camel-case'], function (exports, Ember, ENV, snakeCaseToCamelCase) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend({\n\n        clientId: ENV['default'].defaults.clientId,\n        clientBaseUrl: ENV['default'].defaults.clientBaseUrl,\n        scope: 'read-passwords read-userinfo',\n        accessToken: null,\n        accessTokenExpiration: null,\n\n        init: function init() {\n            this._super();\n            this.loadToken();\n        },\n\n        loadToken: function loadToken() {\n            var accessToken = window.localStorage.getItem('accessToken'),\n                expiration = window.localStorage.getItem('accessTokenExpiration');\n            this.set('accessToken', accessToken);\n            this.set('accessTokenExpiration', expiration);\n        },\n\n        saveToken: function saveToken(token) {\n            var expiration = this.now() + parseInt(token.expiresIn, 10);\n            this.set('accessToken', token.accessToken);\n            this.set('accessTokenExpiration', expiration);\n            window.localStorage.setItem('accessToken', token.accessToken);\n            window.localStorage.setItem('accessTokenExpiration', expiration);\n        },\n\n        deleteToken: function deleteToken() {\n            window.localStorage.removeItem('accessToken');\n            window.localStorage.removeItem('accessTokenExpiration');\n        },\n\n        now: function now() {\n            return Math.round(new Date().getTime() / 1000.0);\n        },\n\n        uuid: function uuid() {\n            var template = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n            return template.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c === 'x' ? r : r & 0x3 | 0x8;\n                return v.toString(16);\n            });\n        },\n\n        redirectUri: (function () {\n            return this.get('clientBaseUrl') + '/assets/auth-callback.html';\n        }).property('clientBaseUrl'),\n\n        authUri: (function () {\n            return [this.get('authBaseUri'), '?response_type=token', '&redirect_uri=' + encodeURIComponent(this.get('redirectUri')), '&client_id=' + encodeURIComponent(this.get('clientId')), '&scope=' + encodeURIComponent(this.get('scope'))].join('');\n        }).property('authBaseUri', 'providerId', 'clientId', 'scope'),\n\n        hasValidAccessToken: (function () {\n            var accessToken = this.get('accessToken'),\n                expiration = this.get('accessTokenExpiration');\n            return accessToken !== null && this.now() < expiration;\n        }).property('accessToken', 'accessTokenExpiration'),\n\n        authorize: function authorize(serverBaseUrl) {\n            var self = this,\n                state = this.uuid(),\n                encodedState = encodeURIComponent(state),\n                authUri = this.get('authUri') + '&state=' + encodedState,\n                uri = serverBaseUrl + '/oauth2/endpoints/authorization' + authUri,\n                dialog = window.open(uri, 'Authorize', 'height=600, width=450'),\n                clientBaseUrl = this.get('clientBaseUrl');\n\n            if (window.focus) {\n                dialog.focus();\n            }\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                Ember['default'].$(window).on('message', function (event) {\n                    var params;\n                    if (event.originalEvent.origin === clientBaseUrl) {\n                        dialog.close();\n                        params = self.parseHash(event.originalEvent.data);\n                        if (self.checkResponse(params, state)) {\n                            self.saveToken(params);\n                            resolve();\n                        } else {\n                            reject();\n                        }\n                    }\n                });\n            });\n        },\n\n        parseHash: function parseHash(hash) {\n            var params = {},\n                queryString = hash.substring(1),\n                // remove #\n            regex = /([^#?&=]+)=([^&]*)/g,\n                match = null,\n                key = null;\n\n            while ((match = regex.exec(queryString)) !== null) {\n                key = snakeCaseToCamelCase['default'](decodeURIComponent(match[1]));\n                params[key] = decodeURIComponent(match[2]);\n            }\n            return params;\n        },\n\n        checkResponse: function checkResponse(params, state) {\n            return params.accessToken && params.state === state;\n        }\n\n    });\n\n});","define('yith-library-mobile-client/services/settings', ['exports', 'ember', 'yith-library-mobile-client/config/environment'], function (exports, Ember, ENV) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend({\n\n        defaults: {\n            'serverBaseUrl': ENV['default'].defaults.serverBaseUrl\n        },\n\n        getSetting: function getSetting(name) {\n            var setting = window.localStorage.getItem(name);\n            if (setting === null) {\n                return this.defaults[name] || null;\n            } else {\n                return JSON.parse(setting);\n            }\n        },\n\n        setSetting: function setSetting(name, value) {\n            var serialized = JSON.stringify(value);\n            return window.localStorage.setItem(name, serialized);\n        },\n\n        deleteSetting: function deleteSetting(name) {\n            window.localStorage.removeItem(name);\n        }\n\n    });\n\n});","define('yith-library-mobile-client/services/sync', ['exports', 'ember', 'ic-ajax', 'yith-library-mobile-client/utils/snake-case-to-camel-case'], function (exports, Ember, request, snakeCaseToCamelCase) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend({\n\n        store: Ember['default'].inject.service(),\n\n        fetchUserInfo: function fetchUserInfo(accessToken, serverBaseUrl, clientId) {\n            var self = this;\n\n            return self.getUserInfo(accessToken, serverBaseUrl, clientId).then(function (rawData) {\n                return self.convertRecord(rawData);\n            }).then(function (convertedData) {\n                return self.updateAccountStore(convertedData);\n            });\n        },\n\n        getUserInfo: function getUserInfo(accessToken, serverBaseUrl, clientId) {\n            return request['default']({\n                url: serverBaseUrl + '/user?client_id=' + clientId,\n                type: 'GET',\n                crossDomain: true,\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                }\n            });\n        },\n\n        /* Convert all the keys of the record to be in camelCase\n           instead of snake_case */\n        convertRecord: function convertRecord(record) {\n            var newRecord = {},\n                key = null,\n                newKey = null;\n            for (key in record) {\n                if (record.hasOwnProperty(key)) {\n                    newKey = snakeCaseToCamelCase['default'](key);\n                    newRecord[newKey] = record[key];\n                }\n            }\n            return newRecord;\n        },\n\n        updateAccountStore: function updateAccountStore(data) {\n            var self = this;\n\n            return new Ember['default'].RSVP.Promise(function (resolve /*, reject */) {\n                var store = self.get('store');\n                store.findRecord('account', data.id).then(function (existingRecord) {\n                    // update account\n                    existingRecord.set('email', data.email);\n                    existingRecord.set('firstName', data.firstName);\n                    existingRecord.set('lastName', data.lastName);\n                    existingRecord.set('screenName', data.screenName);\n                    existingRecord.save().then(function (record) {\n                        resolve(record);\n                    });\n                }, function () {\n                    // create account\n                    // because we try to find it, it is already in the store\n                    // but the record is empty.\n                    var newRecord = store.recordForId('account', data.id);\n                    store.unloadRecord(newRecord);\n                    newRecord = store.createRecord('account', data);\n                    newRecord.save().then(function (record) {\n                        resolve(record);\n                    });\n                });\n            });\n        },\n\n        fetchSecrets: function fetchSecrets(accessToken, serverBaseUrl, clientId) {\n            var self = this;\n\n            return self.getSecrets(accessToken, serverBaseUrl, clientId).then(function (rawData) {\n                return self.updateSecretsStore(rawData);\n            });\n        },\n\n        getSecrets: function getSecrets(accessToken, serverBaseUrl, clientId) {\n            return request['default']({\n                url: serverBaseUrl + '/passwords?client_id=' + clientId,\n                type: 'GET',\n                crossDomain: true,\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken\n                }\n            });\n        },\n\n        updateSecretsStore: function updateSecretsStore(data) {\n            var self = this,\n                store = this.get('store'),\n                promises = {\n                secrets: store.findAll('secret'),\n                tags: store.findAll('tag')\n            };\n            return Ember['default'].RSVP.hash(promises).then(function (results) {\n                var secretsPromise = Ember['default'].RSVP.all(self.updateSecrets(results.secrets, data.passwords)),\n                    tagsPromise = Ember['default'].RSVP.all(self.updateTags(results.tags, data.passwords));\n                return Ember['default'].RSVP.hash({\n                    secrets: secretsPromise,\n                    tags: tagsPromise\n                });\n            });\n        },\n\n        updateSecrets: function updateSecrets(existingRecords, secrets) {\n            var self = this,\n                result = [];\n            secrets.forEach(function (secret) {\n                var existingRecord = existingRecords.findBy('id', secret.id);\n                if (existingRecord !== undefined) {\n                    result.push(self.updateSecret(existingRecord, secret));\n                } else {\n                    result.push(self.createSecret(secret));\n                }\n            });\n            return result;\n        },\n\n        createSecret: function createSecret(data) {\n            return this.get('store').createRecord('secret', {\n                id: data.id,\n                service: data.service,\n                account: data.account,\n                secret: data.secret,\n                notes: data.notes,\n                tags: data.tags.join(' ')\n            }).save();\n        },\n\n        updateSecret: function updateSecret(record, data) {\n            record.set('service', data.service);\n            record.set('account', data.account);\n            record.set('secret', data.secret);\n            record.set('notes', data.notes);\n            record.set('tags', data.tags.join(' '));\n            return record.save();\n        },\n\n        updateTags: function updateTags(existingRecords, passwords) {\n            var self = this,\n                newTags = new Ember['default'].Map(),\n                result = [];\n            passwords.forEach(function (password) {\n                password.tags.forEach(function (tag) {\n                    if (newTags.has(tag)) {\n                        newTags.set(tag, newTags.get(tag) + 1);\n                    } else {\n                        newTags.set(tag, 1);\n                    }\n                });\n            });\n\n            newTags.forEach(function (count, name) {\n                var existingRecord = existingRecords.findBy('name', name),\n                    data = { name: name, count: count };\n                if (existingRecord !== undefined) {\n                    result.push(self.updateTag(existingRecord, data));\n                } else {\n                    result.push(self.createTag(data));\n                }\n            });\n\n            // TODO: remove tags that do not exist anymore\n\n            return result;\n        },\n\n        createTag: function createTag(data) {\n            return this.get('store').createRecord('tag', {\n                name: data.name,\n                count: data.count\n            }).save();\n        },\n\n        updateTag: function updateTag(record, data) {\n            record.set('name', data.name);\n            record.set('count', data.count);\n            return record.save();\n        },\n\n        deleteAccount: function deleteAccount() {\n            var promises = [],\n                store = this.get('store');\n            store.all('secret').forEach(function (secret) {\n                promises.push(secret.destroyRecord());\n            }, this);\n            store.all('tag').forEach(function (tag) {\n                promises.push(tag.destroyRecord());\n            }, this);\n            store.all('account').forEach(function (account) {\n                promises.push(account.destroyRecord());\n            }, this);\n\n            return Ember['default'].RSVP.all(promises);\n        }\n\n    });\n\n});","define('yith-library-mobile-client/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[1,0],[1,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/components/secret-revealer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 11,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/components/secret-revealer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"input\");\n          dom.setAttribute(el2,\"type\",\"text\");\n          dom.setAttribute(el2,\"readonly\",\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.setNamespace(\"http://www.w3.org/2000/svg\");\n          var el2 = dom.createElement(\"svg\");\n          dom.setAttribute(el2,\"xmlns\",\"http://www.w3.org/2000/svg\");\n          dom.setAttribute(el2,\"width\",\"40\");\n          dom.setAttribute(el2,\"height\",\"40\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"circle\");\n          dom.setAttribute(el3,\"cx\",\"50%\");\n          dom.setAttribute(el3,\"cy\",\"50%\");\n          dom.setAttribute(el3,\"r\",\"50%\");\n          dom.setAttribute(el3,\"fill\",\"buttonface\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"path\");\n          dom.setAttribute(el3,\"fill\",\"white\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createAttrMorph(element0, 'value');\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"value\",[\"get\",\"decryptedSecret\",[\"loc\",[null,[3,40],[3,55]]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 16,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/components/secret-revealer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"input\");\n          dom.setAttribute(el2,\"type\",\"password\");\n          dom.setAttribute(el2,\"placeholder\",\"Enter your master password here\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          dom.setAttribute(el2,\"type\",\"reset\");\n          var el3 = dom.createTextNode(\"Clear\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 20,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/components/secret-revealer.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [1, 1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createAttrMorph(element1, 'class');\n        morphs[2] = dom.createMorphAt(element1,0,0);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"decryptedSecret\",[\"loc\",[null,[1,6],[1,21]]]]],[],0,1,[\"loc\",[null,[1,0],[16,7]]]],\n        [\"attribute\",\"class\",[\"get\",\"buttonClass\",[\"loc\",[null,[18,18],[18,29]]]]],\n        [\"content\",\"buttonText\",[\"loc\",[null,[18,32],[18,46]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/first-time', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"header\");\n          var el2 = dom.createTextNode(\"First time steps\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"Connect to the server\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"to sign in or sign up\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"Retrieve your account information\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"so we know a little bit about you\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"Retrieve your secrets\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createTextNode(\"and access them even when offline\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"form\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"type\",\"button\");\n          dom.setAttribute(el3,\"class\",\"recommend\");\n          var el4 = dom.createTextNode(\"Connect to YithLibrary.com\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element4 = dom.childAt(fragment, [5, 1, 1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createElementMorph(element4);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"connect\"],[],[\"loc\",[null,[26,52],[26,72]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 31,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 33,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            Your secrets are ready!\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 33,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 35,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            Running step \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" of 3\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"step\",[\"loc\",[null,[34,25],[34,33]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child2 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 39,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 42,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"aside\");\n            dom.setAttribute(el1,\"class\",\"pack-end\");\n            var el2 = dom.createElement(\"progress\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Connecting to the server...\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child3 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 43,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 45,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Server connected!\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 45,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 47,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Waiting to connect to server.\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 42,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 48,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"if\",[[\"get\",\"isServerConnected\",[\"loc\",[null,[43,20],[43,37]]]]],[],0,1,[\"loc\",[null,[43,14],[47,21]]]]\n          ],\n          locals: [],\n          templates: [child0, child1]\n        };\n      }());\n      var child4 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 51,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 54,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"aside\");\n            dom.setAttribute(el1,\"class\",\"pack-end\");\n            var el2 = dom.createElement(\"progress\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Getting account information...\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child5 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 55,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 57,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Account information retrieved!\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 57,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 59,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Waiting to retrieve account information.\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 54,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 60,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"if\",[[\"get\",\"isAccountInformationRetrieved\",[\"loc\",[null,[55,20],[55,49]]]]],[],0,1,[\"loc\",[null,[55,14],[59,21]]]]\n          ],\n          locals: [],\n          templates: [child0, child1]\n        };\n      }());\n      var child6 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 63,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 66,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"aside\");\n            dom.setAttribute(el1,\"class\",\"pack-end\");\n            var el2 = dom.createElement(\"progress\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"Getting secrets...\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child7 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 67,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 69,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Secrets retrieved!\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 69,\n                  \"column\": 14\n                },\n                \"end\": {\n                  \"line\": 71,\n                  \"column\": 14\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"p\");\n              var el2 = dom.createTextNode(\"Waiting to retrieve secrets.\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() { return []; },\n            statements: [\n\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 66,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 72,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"if\",[[\"get\",\"areSecretsRetrieved\",[\"loc\",[null,[67,20],[67,39]]]]],[],0,1,[\"loc\",[null,[67,14],[71,21]]]]\n          ],\n          locals: [],\n          templates: [child0, child1]\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 29,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 75,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"header\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [3]);\n          var element2 = dom.childAt(element1, [3]);\n          var element3 = dom.childAt(element1, [5]);\n          var morphs = new Array(6);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n          morphs[2] = dom.createAttrMorph(element2, 'aria-disabled');\n          morphs[3] = dom.createMorphAt(element2,1,1);\n          morphs[4] = dom.createAttrMorph(element3, 'aria-disabled');\n          morphs[5] = dom.createMorphAt(element3,1,1);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"isFinished\",[\"loc\",[null,[31,17],[31,27]]]]],[],0,1,[\"loc\",[null,[31,10],[35,17]]]],\n          [\"block\",\"if\",[[\"get\",\"isConnectingToServer\",[\"loc\",[null,[39,18],[39,38]]]]],[],2,3,[\"loc\",[null,[39,12],[48,19]]]],\n          [\"attribute\",\"aria-disabled\",[\"get\",\"accountDisabled\",[\"loc\",[null,[50,30],[50,45]]]]],\n          [\"block\",\"if\",[[\"get\",\"isGettingAccountInformation\",[\"loc\",[null,[51,18],[51,45]]]]],[],4,5,[\"loc\",[null,[51,12],[60,19]]]],\n          [\"attribute\",\"aria-disabled\",[\"get\",\"secretsDisabled\",[\"loc\",[null,[62,30],[62,45]]]]],\n          [\"block\",\"if\",[[\"get\",\"isGettingSecrets\",[\"loc\",[null,[63,18],[63,34]]]]],[],6,7,[\"loc\",[null,[63,12],[72,19]]]]\n        ],\n        locals: [],\n        templates: [child0, child1, child2, child3, child4, child5, child6, child7]\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 76,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 84,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"form\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"type\",\"button\");\n          dom.setAttribute(el3,\"class\",\"recommend\");\n          var el4 = dom.createTextNode(\"\\n              Go to my secrets\\n            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1, 1, 1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createElementMorph(element0);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"secrets\"],[],[\"loc\",[null,[79,52],[79,72]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 93,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/first-time.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"id\",\"login\");\n        dom.setAttribute(el1,\"role\",\"region\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        dom.setAttribute(el2,\"class\",\"fixed\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"Yith Library\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"content scrollable header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"section\");\n        dom.setAttribute(el3,\"data-type\",\"list\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"role\",\"status\");\n        dom.setAttribute(el2,\"class\",\"onviewport\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createElement(\"small\");\n        var el5 = dom.createTextNode(\"v\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element5 = dom.childAt(fragment, [0]);\n        var element6 = dom.childAt(element5, [3, 1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(element6,1,1);\n        morphs[1] = dom.createMorphAt(element6,2,2);\n        morphs[2] = dom.createMorphAt(dom.childAt(element5, [5, 1, 0]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"showInstructions\",[\"loc\",[null,[8,12],[8,28]]]]],[],0,1,[\"loc\",[null,[8,6],[75,13]]]],\n        [\"block\",\"if\",[[\"get\",\"isFinished\",[\"loc\",[null,[76,12],[76,22]]]]],[],2,null,[\"loc\",[null,[76,6],[84,13]]]],\n        [\"content\",\"app-version\",[\"loc\",[null,[89,15],[89,30]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 12,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/loading.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"id\",\"loading\");\n        dom.setAttribute(el1,\"role\",\"region\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        dom.setAttribute(el2,\"class\",\"fixed\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"Loading data\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"content scrollable header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"header\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h2\");\n        var el5 = dom.createTextNode(\"Please wait\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"progress\");\n        dom.setAttribute(el3,\"class\",\"pack-activity\");\n        dom.setAttribute(el3,\"max\",\"100\");\n        dom.setAttribute(el3,\"value\",\"0\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() { return []; },\n      statements: [\n\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/secret', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secret.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"icon icon-back\");\n          var el2 = dom.createTextNode(\"back\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 16,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 21,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secret.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"header\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h2\");\n          var el3 = dom.createTextNode(\"Notes\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"model.notes\",[\"loc\",[null,[20,11],[20,26]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 23,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 28,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secret.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"header\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h2\");\n          var el3 = dom.createTextNode(\"Tags\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"model.tags\",[\"loc\",[null,[27,11],[27,25]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 30,\n            \"column\": 10\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/secret.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"data-position\",\"right\");\n        dom.setAttribute(el1,\"role\",\"region\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        dom.setAttribute(el2,\"class\",\"fixed\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"content scrollable header\");\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"header\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h2\");\n        var el5 = dom.createTextNode(\"Account\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var morphs = new Array(8);\n        morphs[0] = dom.createAttrMorph(element0, 'class');\n        morphs[1] = dom.createElementMorph(element0);\n        morphs[2] = dom.createMorphAt(element1,1,1);\n        morphs[3] = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n        morphs[4] = dom.createMorphAt(element2,1,1);\n        morphs[5] = dom.createMorphAt(dom.childAt(element2, [5]),0,0);\n        morphs[6] = dom.createMorphAt(element2,7,7);\n        morphs[7] = dom.createMorphAt(element2,9,9);\n        return morphs;\n      },\n      statements: [\n        [\"attribute\",\"class\",[\"get\",\"position\",[\"loc\",[null,[1,53],[1,61]]]]],\n        [\"element\",\"action\",[\"finishTransition\"],[\"on\",\"animationEnd\"],[\"loc\",[null,[1,64],[1,111]]]],\n        [\"block\",\"link-to\",[\"secrets\"],[],0,null,[\"loc\",[null,[3,6],[5,18]]]],\n        [\"content\",\"model.service\",[\"loc\",[null,[6,10],[6,27]]]],\n        [\"inline\",\"secret-revealer\",[],[\"secret\",[\"subexpr\",\"@mut\",[[\"get\",\"model.secret\",[\"loc\",[null,[10,31],[10,43]]]]],[],[]]],[\"loc\",[null,[10,6],[10,45]]]],\n        [\"content\",\"model.account\",[\"loc\",[null,[14,9],[14,26]]]],\n        [\"block\",\"if\",[[\"get\",\"model.notes\",[\"loc\",[null,[16,12],[16,23]]]]],[],1,null,[\"loc\",[null,[16,6],[21,13]]]],\n        [\"block\",\"if\",[[\"get\",\"model.tags\",[\"loc\",[null,[23,12],[23,22]]]]],[],2,null,[\"loc\",[null,[23,6],[28,13]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/secrets', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 10,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"icon icon-menu\");\n          var el2 = dom.createTextNode(\"menu\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 21,\n              \"column\": 10\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 10\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"tag\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"tag\",[\"loc\",[null,[22,30],[22,37]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 28,\n                \"column\": 14\n              },\n              \"end\": {\n                \"line\": 31,\n                \"column\": 14\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(2);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"secret.service\",[\"loc\",[null,[29,19],[29,37]]]],\n            [\"content\",\"secret.account\",[\"loc\",[null,[30,19],[30,37]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 26,\n              \"column\": 10\n            },\n            \"end\": {\n              \"line\": 33,\n              \"column\": 10\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"secret\",[\"get\",\"secret.id\",[\"loc\",[null,[28,34],[28,43]]]]],[],0,null,[\"loc\",[null,[28,14],[31,26]]]]\n        ],\n        locals: [\"secret\"],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 46,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/secrets.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"data-position\",\"current\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"secrets\");\n        dom.setAttribute(el2,\"role\",\"region\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"header\");\n        dom.setAttribute(el3,\"class\",\"fixed\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"form\");\n        dom.setAttribute(el4,\"action\",\"#\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"reset\");\n        var el6 = dom.createTextNode(\"Remove text\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"article\");\n        dom.setAttribute(el3,\"class\",\"content scrollable header\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"data-type\",\"list\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"header\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"small\");\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\" \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"role\",\"status\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [3]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element2, [3]);\n        var element4 = dom.childAt(element3, [3]);\n        var element5 = dom.childAt(element1, [3, 1]);\n        var element6 = dom.childAt(element5, [1]);\n        var element7 = dom.childAt(element6, [1]);\n        var element8 = dom.childAt(fragment, [2]);\n        var morphs = new Array(14);\n        morphs[0] = dom.createAttrMorph(element0, 'class');\n        morphs[1] = dom.createMorphAt(element0,1,1);\n        morphs[2] = dom.createAttrMorph(element1, 'class');\n        morphs[3] = dom.createElementMorph(element1);\n        morphs[4] = dom.createMorphAt(element2,1,1);\n        morphs[5] = dom.createMorphAt(element3,1,1);\n        morphs[6] = dom.createElementMorph(element4);\n        morphs[7] = dom.createMorphAt(element7,0,0);\n        morphs[8] = dom.createMorphAt(element7,2,2);\n        morphs[9] = dom.createMorphAt(element6,3,3);\n        morphs[10] = dom.createMorphAt(dom.childAt(element5, [3]),1,1);\n        morphs[11] = dom.createAttrMorph(element8, 'class');\n        morphs[12] = dom.createMorphAt(dom.childAt(element8, [1]),0,0);\n        morphs[13] = dom.createMorphAt(fragment,4,4,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"attribute\",\"class\",[\"get\",\"position\",[\"loc\",[null,[1,41],[1,49]]]]],\n        [\"inline\",\"outlet\",[[\"get\",\"drawer\",[\"loc\",[null,[3,11],[3,17]]]]],[],[\"loc\",[null,[3,2],[3,19]]]],\n        [\"attribute\",\"class\",[\"get\",\"state\",[\"loc\",[null,[5,46],[5,51]]]]],\n        [\"element\",\"action\",[\"finishTransition\"],[\"on\",\"transitionEnd\"],[\"loc\",[null,[5,54],[5,102]]]],\n        [\"block\",\"link-to\",[\"secrets.drawer\"],[],0,null,[\"loc\",[null,[8,6],[10,18]]]],\n        [\"inline\",\"input\",[],[\"placeholder\",\"Search...\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"query\",[\"loc\",[null,[12,46],[12,51]]]]],[],[]]],[\"loc\",[null,[12,8],[12,53]]]],\n        [\"element\",\"action\",[\"clearQuery\"],[],[\"loc\",[null,[13,29],[13,52]]]],\n        [\"content\",\"secretsCount\",[\"loc\",[null,[20,17],[20,33]]]],\n        [\"content\",\"secretsNoun\",[\"loc\",[null,[20,34],[20,49]]]],\n        [\"block\",\"if\",[[\"get\",\"tag\",[\"loc\",[null,[21,16],[21,19]]]]],[],1,null,[\"loc\",[null,[21,10],[23,17]]]],\n        [\"block\",\"each\",[[\"get\",\"secrets\",[\"loc\",[null,[26,18],[26,25]]]]],[],2,null,[\"loc\",[null,[26,10],[33,19]]]],\n        [\"attribute\",\"class\",[\"get\",\"statusClass\",[\"loc\",[null,[41,31],[41,42]]]]],\n        [\"content\",\"statusMessage\",[\"loc\",[null,[42,5],[42,22]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[45,0],[45,10]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/secrets/drawer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 4,\n              \"column\": 32\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Done\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 14,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 16,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"#\");\n            var el2 = dom.createTextNode(\"Sync\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element5 = dom.childAt(fragment, [1]);\n            var morphs = new Array(1);\n            morphs[0] = dom.createElementMorph(element5);\n            return morphs;\n          },\n          statements: [\n            [\"element\",\"action\",[\"closeDrawer\"],[],[\"loc\",[null,[15,24],[15,48]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 17,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 19,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"              \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"a\");\n              dom.setAttribute(el1,\"href\",\"#\");\n              var el2 = dom.createTextNode(\"Syncing ...\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element4 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element4);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"closeDrawer\"],[],[\"loc\",[null,[18,26],[18,50]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 19,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 21,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"              \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"a\");\n              dom.setAttribute(el1,\"href\",\"#\");\n              var el2 = dom.createTextNode(\"Sync\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element3 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element3);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"sync\"],[],[\"loc\",[null,[20,26],[20,43]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 16,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 22,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"if\",[[\"get\",\"isSyncing\",[\"loc\",[null,[17,19],[17,28]]]]],[],0,1,[\"loc\",[null,[17,12],[21,19]]]]\n          ],\n          locals: [],\n          templates: [child0, child1]\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 13,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"syncButtonDisabled\",[\"loc\",[null,[14,17],[14,35]]]]],[],0,1,[\"loc\",[null,[14,10],[22,17]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 24,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 26,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"#\");\n            var el2 = dom.createTextNode(\"Login\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element2 = dom.childAt(fragment, [1]);\n            var morphs = new Array(1);\n            morphs[0] = dom.createElementMorph(element2);\n            return morphs;\n          },\n          statements: [\n            [\"element\",\"action\",[\"closeDrawer\"],[],[\"loc\",[null,[25,24],[25,48]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 27,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 29,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"              \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"a\");\n              dom.setAttribute(el1,\"href\",\"#\");\n              var el2 = dom.createTextNode(\"Logging in ...\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element1 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element1);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"closeDrawer\"],[],[\"loc\",[null,[28,26],[28,50]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"revision\": \"Ember@1.13.7\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 29,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 31,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n            },\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"              \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"a\");\n              dom.setAttribute(el1,\"href\",\"#\");\n              var el2 = dom.createTextNode(\"Log in\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element0 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element0);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"login\"],[],[\"loc\",[null,[30,26],[30,44]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 26,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 32,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"if\",[[\"get\",\"isAuthorizing\",[\"loc\",[null,[27,19],[27,32]]]]],[],0,1,[\"loc\",[null,[27,12],[31,19]]]]\n          ],\n          locals: [],\n          templates: [child0, child1]\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 23,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 33,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"loginButtonDisableed\",[\"loc\",[null,[24,17],[24,37]]]]],[],0,1,[\"loc\",[null,[24,10],[32,17]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    var child3 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 42,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 45,\n                \"column\": 10\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" (\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\")\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n            morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n            morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);\n            return morphs;\n          },\n          statements: [\n            [\"inline\",\"current-tag\",[[\"get\",\"currentTag.name\",[\"loc\",[null,[43,26],[43,41]]]],[\"get\",\"tag\",[\"loc\",[null,[43,42],[43,45]]]]],[],[\"loc\",[null,[43,12],[43,47]]]],\n            [\"content\",\"currentTag.name\",[\"loc\",[null,[44,12],[44,31]]]],\n            [\"content\",\"currentTag.count\",[\"loc\",[null,[44,33],[44,53]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 40,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 47,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"secrets\",[\"subexpr\",\"query-params\",[],[\"tag\",[\"get\",\"currentTag.selectTag\",[\"loc\",[null,[42,49],[42,69]]]]],[\"loc\",[null,[42,31],[42,70]]]]],[],0,null,[\"loc\",[null,[42,10],[45,22]]]]\n        ],\n        locals: [\"currentTag\"],\n        templates: [child0]\n      };\n    }());\n    var child4 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 50,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 50,\n                \"column\": 54\n              }\n            },\n            \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"See more tags ...\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 52,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"secrets.tags\"],[],0,null,[\"loc\",[null,[50,10],[50,66]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 61,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/secrets/drawer.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"data-type\",\"sidebar\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"menu\");\n        dom.setAttribute(el3,\"type\",\"toolbar\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"nav\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Account\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createElement(\"a\");\n        dom.setAttribute(el5,\"href\",\"#\");\n        var el6 = dom.createTextNode(\"Log out\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Tags\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"role\",\"status\");\n        dom.setAttribute(el2,\"class\",\"onviewport\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createElement(\"small\");\n        var el5 = dom.createTextNode(\"v\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element6 = dom.childAt(fragment, [0]);\n        var element7 = dom.childAt(element6, [1]);\n        var element8 = dom.childAt(element6, [3]);\n        var element9 = dom.childAt(element8, [3]);\n        var element10 = dom.childAt(element9, [3, 0]);\n        var element11 = dom.childAt(element8, [7]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(dom.childAt(element7, [1]),1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(element7, [3]),0,0);\n        morphs[2] = dom.createMorphAt(dom.childAt(element9, [1]),1,1);\n        morphs[3] = dom.createElementMorph(element10);\n        morphs[4] = dom.createMorphAt(element11,1,1);\n        morphs[5] = dom.createMorphAt(element11,2,2);\n        morphs[6] = dom.createMorphAt(dom.childAt(element6, [5, 1, 0]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"secrets\"],[],0,null,[\"loc\",[null,[4,6],[4,44]]]],\n        [\"content\",\"accountDisplayName\",[\"loc\",[null,[6,8],[6,30]]]],\n        [\"block\",\"if\",[[\"get\",\"authManager.hasValidAccessToken\",[\"loc\",[null,[13,15],[13,46]]]]],[],1,2,[\"loc\",[null,[13,8],[33,15]]]],\n        [\"element\",\"action\",[\"logout\"],[],[\"loc\",[null,[35,22],[35,41]]]],\n        [\"block\",\"each\",[[\"get\",\"mostUsedTags\",[\"loc\",[null,[40,14],[40,26]]]]],[],3,null,[\"loc\",[null,[40,6],[47,15]]]],\n        [\"block\",\"if\",[[\"get\",\"hasMoreTags\",[\"loc\",[null,[48,13],[48,24]]]]],[],4,null,[\"loc\",[null,[48,6],[52,13]]]],\n        [\"content\",\"app-version\",[\"loc\",[null,[57,15],[57,30]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/templates/secrets/tags', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 8,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"yith-library-mobile-client/templates/secrets/tags.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"type\",\"button\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" (\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\")\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createElementMorph(element0);\n          morphs[1] = dom.createMorphAt(element0,1,1);\n          morphs[2] = dom.createMorphAt(element0,3,3);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"selectTag\",[\"get\",\"tag.name\",[\"loc\",[null,[5,49],[5,57]]]]],[],[\"loc\",[null,[5,28],[5,60]]]],\n          [\"content\",\"tag.name\",[\"loc\",[null,[6,8],[6,20]]]],\n          [\"content\",\"tag.count\",[\"loc\",[null,[6,22],[6,35]]]]\n        ],\n        locals: [\"tag\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 11,\n            \"column\": 7\n          }\n        },\n        \"moduleName\": \"yith-library-mobile-client/templates/secrets/tags.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"data-type\",\"action\");\n        dom.setAttribute(el1,\"role\",\"dialog\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        var el3 = dom.createTextNode(\"Available tags\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"menu\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        var el4 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [0, 3]);\n        var element2 = dom.childAt(element1, [3]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element1,1,1);\n        morphs[1] = dom.createElementMorph(element2);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"each\",[[\"get\",\"sortedTags\",[\"loc\",[null,[4,12],[4,22]]]]],[],0,null,[\"loc\",[null,[4,4],[8,13]]]],\n        [\"element\",\"action\",[\"cancel\"],[],[\"loc\",[null,[9,26],[9,45]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('yith-library-mobile-client/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/components/secret-revealer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/secret-revealer.js should pass jshint', function() { \n    ok(true, 'components/secret-revealer.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/first-time.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/first-time.js should pass jshint', function() { \n    ok(true, 'controllers/first-time.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/secret.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/secret.js should pass jshint', function() { \n    ok(true, 'controllers/secret.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/secrets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/secrets.js should pass jshint', function() { \n    ok(true, 'controllers/secrets.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/secrets/drawer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/secrets');\n  test('controllers/secrets/drawer.js should pass jshint', function() { \n    ok(true, 'controllers/secrets/drawer.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/controllers/secrets/tags.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/secrets');\n  test('controllers/secrets/tags.js should pass jshint', function() { \n    ok(true, 'controllers/secrets/tags.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/helpers/current-tag.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/current-tag.js should pass jshint', function() { \n    ok(true, 'helpers/current-tag.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/helpers/resolver', ['exports', 'ember/resolver', 'yith-library-mobile-client/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('yith-library-mobile-client/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/helpers/start-app', ['exports', 'ember', 'yith-library-mobile-client/app', 'yith-library-mobile-client/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('yith-library-mobile-client/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/integration/components/secret-revealer-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('secret-revealer', 'Integration | Component | secret revealer', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 19\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'secret-revealer', ['loc', [null, [1, 0], [1, 19]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@1.13.7',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'secret-revealer', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('yith-library-mobile-client/tests/integration/components/secret-revealer-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - integration/components');\n  test('integration/components/secret-revealer-test.js should pass jshint', function() { \n    ok(true, 'integration/components/secret-revealer-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/integration/sync-test', ['ember', 'ember-qunit', 'ic-ajax', 'yith-library-mobile-client/tests/helpers/start-app'], function (Ember, ember_qunit, ic_ajax, startApp) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('service:sync', 'Integration | Service | sync', {\n        integration: true,\n        needs: ['model:account', 'model:secret', 'model:tag'],\n        beforeEach: function beforeEach(assert) {\n            var adapter = null,\n                done = assert.async();\n\n            this.app = startApp['default']();\n            adapter = this.app.__container__.lookup('adapter:application');\n            adapter.get('cache').clear();\n\n            window.localforage.clear(function () {\n                done();\n            });\n        },\n        afterEach: function afterEach() {\n            Ember['default'].run(this.app, 'destroy');\n        }\n    });\n\n    ember_qunit.test('updateAccountStore creates a new record and save it to the store if the record is new', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(7);\n\n        Ember['default'].run(function () {\n            service.get('store').findAll('account').then(function (results) {\n                assert.equal(results.get('length'), 0, 'The store should be empty initially');\n\n                return service.updateAccountStore({\n                    'id': '123',\n                    'email': 'test@example.com',\n                    'firstName': 'John',\n                    'lastName': 'Doe',\n                    'screenName': 'Johnny'\n                });\n            }).then(function (record) {\n                assert.equal(record.get('id'), '123', 'The id attribute should match');\n                assert.equal(record.get('email'), 'test@example.com', 'The email attribute should match');\n                assert.equal(record.get('firstName'), 'John', 'The firstName attribute should match');\n                assert.equal(record.get('lastName'), 'Doe', 'The lastName attribute should match');\n                assert.equal(record.get('screenName'), 'Johnny', 'The screenName attribute should match');\n\n                return service.get('store').findAll('account');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to updateAccountStore the store should contain one account');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateAccountStore updates an existing record and save it to the store if the record is not new', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(7);\n\n        Ember['default'].run(function () {\n            var account = service.get('store').createRecord('account', {\n                'id': '123',\n                'email': 'test@example.com',\n                'firstName': 'John',\n                'lastName': 'Doe',\n                'screenName': 'Johnny'\n            });\n            account.save().then(function () {\n                return service.get('store').findAll('account');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'The store should contain one account initially');\n                return service.updateAccountStore({\n                    'id': '123',\n                    'email': 'test2@example.com',\n                    'firstName': 'John2',\n                    'lastName': 'Doe2',\n                    'screenName': 'Johnny2'\n                });\n            }).then(function (record) {\n                assert.equal(record.get('id'), '123', 'The id attribute should match');\n                assert.equal(record.get('email'), 'test2@example.com', 'The email attribute should match');\n                assert.equal(record.get('firstName'), 'John2', 'The firstName attribute should match');\n                assert.equal(record.get('lastName'), 'Doe2', 'The lastName attribute should match');\n                assert.equal(record.get('screenName'), 'Johnny2', 'The screenName attribute should match');\n\n                return service.get('store').findAll('account');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to updateAccountStore the store should still contain one account');\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('fetchUserInfo get user info and update the account store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(5);\n\n        ic_ajax.defineFixture('/user?client_id=123', {\n            response: {\n                'id': '123',\n                'email': 'test@example.com',\n                'first_name': 'John',\n                'last_name': 'Doe',\n                'screen_name': 'Johnny'\n            },\n            jqXHR: {},\n            textStatus: 'success'\n        });\n        Ember['default'].run(function () {\n            service.fetchUserInfo('token', '', 123).then(function (record) {\n                assert.equal(record.get('id'), '123', 'The id attribute should match');\n                assert.equal(record.get('email'), 'test@example.com', 'The email attribute should match');\n                assert.equal(record.get('firstName'), 'John', 'The firstName attribute should match');\n                assert.equal(record.get('lastName'), 'Doe', 'The lastName attribute should match');\n                assert.equal(record.get('screenName'), 'Johnny', 'The screenName attribute should match');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('createSecret creates a new secret', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(8);\n\n        Ember['default'].run(function () {\n            service.get('store').findAll('secret').then(function (results) {\n                assert.equal(results.get('length'), 0, 'The store should be empty initially');\n\n                return service.createSecret({\n                    id: '1',\n                    service: 'example.com',\n                    account: 'john',\n                    secret: 's3cr3t',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                });\n            }).then(function (record) {\n                assert.equal(record.get('id'), '1', 'The id attribute should match');\n                assert.equal(record.get('service'), 'example.com', 'The service attribute should match');\n                assert.equal(record.get('account'), 'john', 'The account attribute should match');\n                assert.equal(record.get('secret'), 's3cr3t', 'The secret attribute should match');\n                assert.equal(record.get('notes'), 'example notes', 'The notes attribute should match');\n                assert.equal(record.get('tags'), 'tag1 tag2', 'The notes attribute should match a serialized string of the original list');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to createSecret the store should contains one secret');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateSecret updates an existing secret without creating another one', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(8);\n\n        Ember['default'].run(function () {\n            var secret = service.get('store').createRecord('secret', {\n                id: '1',\n                service: 'example.com',\n                account: 'john',\n                secret: 's3cr3t',\n                notes: 'example notes',\n                tags: ['tag1', 'tag2']\n\n            });\n            secret.save().then(function () {\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'The store should contain one secret initially');\n\n                return service.updateSecret(secret, {\n                    service: 'mail.example.com',\n                    account: 'john2',\n                    secret: 's3cr3t',\n                    notes: 'example notes2',\n                    tags: ['tag3', 'tag4']\n                });\n            }).then(function (record) {\n                assert.equal(record.get('id'), '1', 'The id attribute should match');\n                assert.equal(record.get('service'), 'mail.example.com', 'The service attribute should match');\n                assert.equal(record.get('account'), 'john2', 'The account attribute should match');\n                assert.equal(record.get('secret'), 's3cr3t', 'The secret attribute should match');\n                assert.equal(record.get('notes'), 'example notes2', 'The notes attribute should match');\n                assert.equal(record.get('tags'), 'tag3 tag4', 'The notes attribute should match a serialized string of the original list');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to updateSecret the store should still contains one secret');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateSecrets creates secrets if they do not exists in the store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(15);\n\n        Ember['default'].run(function () {\n            service.get('store').findAll('secret').then(function (existingRecords) {\n                assert.equal(existingRecords.get('length'), 0, 'The store should be empty initially');\n\n                return Ember['default'].RSVP.all(service.updateSecrets(existingRecords, [{\n                    id: '10',\n                    service: '1.example.com',\n                    account: 'john',\n                    secret: 's3cr3t1',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                }, {\n                    id: '11',\n                    service: '2.example.com',\n                    account: 'john',\n                    secret: 's3cr3t2',\n                    notes: '',\n                    tags: []\n                }]));\n            }).then(function (newRecords) {\n                assert.equal(newRecords.length, 2, \"After the promises are resolved the result contain 2 new records\");\n\n                assert.equal(newRecords[0].get('id'), '10', 'The id attribute of the first record should match');\n                assert.equal(newRecords[0].get('service'), '1.example.com', 'The service attribute of the first record should match');\n                assert.equal(newRecords[0].get('account'), 'john', 'The account attribute of the first record should match');\n                assert.equal(newRecords[0].get('secret'), 's3cr3t1', 'The secret attribute of the first record should match');\n                assert.equal(newRecords[0].get('notes'), 'example notes', 'The notes attribute of the first record should match');\n                assert.equal(newRecords[0].get('tags'), 'tag1 tag2', 'The tags attribute of the first record should match');\n\n                assert.equal(newRecords[1].get('id'), '11', 'The id attribute of the second record should match');\n                assert.equal(newRecords[1].get('service'), '2.example.com', 'The service attribute of the second record should match');\n                assert.equal(newRecords[1].get('account'), 'john', 'The account attribute of the second record should match');\n                assert.equal(newRecords[1].get('secret'), 's3cr3t2', 'The secret attribute of the second record should match');\n                assert.equal(newRecords[1].get('notes'), '', 'The notes attribute of the second record should match');\n                assert.equal(newRecords[1].get('tags'), '', 'The tags attribute of the second record should match');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecrets the store should contains two secrets');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateSecrets updates secrets if they already exists in the store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(15);\n\n        Ember['default'].run(function () {\n            var secret = service.get('store').createRecord('secret', {\n                id: '10',\n                service: 'example.com',\n                account: 'johnny',\n                secret: '0lds3cr3t',\n                notes: 'old example notes',\n                tags: ['old-tag1', 'old-tag2']\n            });\n            secret.save().then(function () {\n                return service.get('store').findAll('secret');\n            }).then(function (existingRecords) {\n                assert.equal(existingRecords.get('length'), 1, 'The store should contain one secret initially');\n\n                return Ember['default'].RSVP.all(service.updateSecrets(existingRecords, [{\n                    id: '10',\n                    service: '1.example.com',\n                    account: 'john',\n                    secret: 's3cr3t1',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                }, {\n                    id: '11',\n                    service: '2.example.com',\n                    account: 'john',\n                    secret: 's3cr3t2',\n                    notes: '',\n                    tags: []\n                }]));\n            }).then(function (newRecords) {\n                assert.equal(newRecords.length, 2, \"After the promises are resolved the result contain 2 records, one updated, one new\");\n\n                assert.equal(newRecords[0].get('id'), '10', 'The id attribute of the first record should match');\n                assert.equal(newRecords[0].get('service'), '1.example.com', 'The service attribute of the first record should match');\n                assert.equal(newRecords[0].get('account'), 'john', 'The account attribute of the first record should match');\n                assert.equal(newRecords[0].get('secret'), 's3cr3t1', 'The secret attribute of the first record should match');\n                assert.equal(newRecords[0].get('notes'), 'example notes', 'The notes attribute of the first record should match');\n                assert.equal(newRecords[0].get('tags'), 'tag1 tag2', 'The tags attribute of the first record should match');\n\n                assert.equal(newRecords[1].get('id'), '11', 'The id attribute of the second record should match');\n                assert.equal(newRecords[1].get('service'), '2.example.com', 'The service attribute of the second record should match');\n                assert.equal(newRecords[1].get('account'), 'john', 'The account attribute of the second record should match');\n                assert.equal(newRecords[1].get('secret'), 's3cr3t2', 'The secret attribute of the second record should match');\n                assert.equal(newRecords[1].get('notes'), '', 'The notes attribute of the second record should match');\n                assert.equal(newRecords[1].get('tags'), '', 'The tags attribute of the second record should match');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecrets the store should contains two secrets');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('createTag creates a new tag', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(4);\n\n        Ember['default'].run(function () {\n            service.get('store').findAll('tag').then(function (results) {\n                assert.equal(results.get('length'), 0, 'The store should be empty initially');\n\n                return service.createTag({\n                    name: 'tag1',\n                    count: 10\n                });\n            }).then(function (record) {\n                assert.equal(record.get('name'), 'tag1', 'The name attribute should match');\n                assert.equal(record.get('count'), 10, 'The count attribute should match');\n\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to createTag the store should contains one tag');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateTag updates an existing tag without creating another one', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(4);\n\n        Ember['default'].run(function () {\n            var tag = service.get('store').createRecord('tag', {\n                name: 'tag1',\n                count: 10\n            });\n            tag.save().then(function () {\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'The store should contain one tag initially');\n\n                return service.updateTag(tag, { name: 'tag1', count: 20 });\n            }).then(function (record) {\n                assert.equal(record.get('name'), 'tag1', 'The name attribute should match');\n                assert.equal(record.get('count'), 20, 'The count attribute should match');\n\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 1, 'After the call to updateTag the store should still contains one tag');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateTags creates tags if they do not exists in the store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(7);\n\n        Ember['default'].run(function () {\n            service.get('store').findAll('tag').then(function (existingRecords) {\n                assert.equal(existingRecords.get('length'), 0, 'The store should be empty initially');\n\n                return Ember['default'].RSVP.all(service.updateTags(existingRecords, [{\n                    id: '10',\n                    service: '1.example.com',\n                    account: 'john',\n                    secret: 's3cr3t1',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                }, {\n                    id: '11',\n                    service: '2.example.com',\n                    account: 'john',\n                    secret: 's3cr3t2',\n                    notes: '',\n                    tags: ['tag1']\n                }]));\n            }).then(function (newRecords) {\n                assert.equal(newRecords.length, 2, \"After the promises are resolved the result contain 2 new records\");\n\n                assert.equal(newRecords[0].get('name'), 'tag1', 'The name attribute of the first record should match');\n                assert.equal(newRecords[0].get('count'), 2, 'The count attribute of the first record should match');\n\n                assert.equal(newRecords[1].get('name'), 'tag2', 'The name attribute of the second record should match');\n                assert.equal(newRecords[1].get('count'), 1, 'The count attribute of the second record should match');\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecrets the store should contains two tags');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateTags updates tags if they exist in the store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(7);\n\n        Ember['default'].run(function () {\n            var tag = service.get('store').createRecord('tag', {\n                name: 'tag1',\n                count: 10\n            });\n            tag.save().then(function () {\n                return service.get('store').findAll('tag');\n            }).then(function (existingRecords) {\n                assert.equal(existingRecords.get('length'), 1, 'The store should contain one tag initially');\n\n                return Ember['default'].RSVP.all(service.updateTags(existingRecords, [{\n                    id: '10',\n                    service: '1.example.com',\n                    account: 'john',\n                    secret: 's3cr3t1',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                }, {\n                    id: '11',\n                    service: '2.example.com',\n                    account: 'john',\n                    secret: 's3cr3t2',\n                    notes: '',\n                    tags: ['tag1']\n                }]));\n            }).then(function (newRecords) {\n                assert.equal(newRecords.length, 2, \"After the promises are resolved the result contain 2 new records\");\n\n                assert.equal(newRecords[0].get('name'), 'tag1', 'The name attribute of the first record should match');\n                assert.equal(newRecords[0].get('count'), 2, 'The count attribute of the first record should match');\n\n                assert.equal(newRecords[1].get('name'), 'tag2', 'The name attribute of the second record should match');\n                assert.equal(newRecords[1].get('count'), 1, 'The count attribute of the second record should match');\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecrets the store should contains two tags');\n\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('updateSecretsStore updates the secrets store with incoming data from the server', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(22);\n\n        Ember['default'].run(function () {\n\n            service.get('store').findAll('tag').then(function (results) {\n                assert.equal(results.get('length'), 0, 'The tag store should be empty initially');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 0, 'The secret store should be empty initially');\n\n                return service.updateSecretsStore({\n                    passwords: [{\n                        id: '1',\n                        service: '1.example.com',\n                        account: 'john',\n                        secret: 's3cr3t1',\n                        notes: 'example notes',\n                        tags: ['tag1', 'tag2']\n                    }, {\n                        id: '2',\n                        service: '2.example.com',\n                        account: 'john',\n                        secret: 's3cr3t2',\n                        notes: '',\n                        tags: ['tag1']\n                    }]\n                });\n            }).then(function (result) {\n                assert.equal(result.secrets.length, 2, 'There should be two secrets in the results');\n                assert.equal(result.secrets[0].get('id'), '1', 'The id attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('service'), '1.example.com', 'The service attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('account'), 'john', 'The account attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('secret'), 's3cr3t1', 'The secret attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('notes'), 'example notes', 'The notes attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('tags'), 'tag1 tag2', 'The tags attribute of the first secret should match');\n\n                assert.equal(result.secrets[1].get('id'), '2', 'The id attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('service'), '2.example.com', 'The service attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('account'), 'john', 'The account attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('secret'), 's3cr3t2', 'The secret attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('notes'), '', 'The notes attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('tags'), 'tag1', 'The tags attribute of the second secret should match');\n\n                assert.equal(result.tags.length, 2, 'There should be two tags in the results');\n                assert.equal(result.tags[0].get('name'), 'tag1', 'The name attribute of the first tag should match');\n                assert.equal(result.tags[0].get('count'), 2, 'The count attribute of the first tag should match');\n\n                assert.equal(result.tags[1].get('name'), 'tag2', 'The name attribute of the second tag should match');\n                assert.equal(result.tags[1].get('count'), 1, 'The count attribute of the second tag should match');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecretsStore the store should contain two secrets');\n\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecretsStore the store should contain two tags');\n                done();\n            });\n        });\n    });\n\n    ember_qunit.test('fetchSecrets get the secrets and update the account store', function (assert) {\n        var service = this.subject(),\n            done = assert.async();\n\n        assert.expect(22);\n\n        ic_ajax.defineFixture('/passwords?client_id=123', {\n            response: {\n                passwords: [{\n                    id: '1',\n                    service: '1.example.com',\n                    account: 'john',\n                    secret: 's3cr3t1',\n                    notes: 'example notes',\n                    tags: ['tag1', 'tag2']\n                }, {\n                    id: '2',\n                    service: '2.example.com',\n                    account: 'john',\n                    secret: 's3cr3t2',\n                    notes: '',\n                    tags: ['tag1']\n                }]\n            },\n            jqXHR: {},\n            textStatus: 'success'\n        });\n        Ember['default'].run(function () {\n            service.get('store').findAll('tag').then(function (results) {\n                assert.equal(results.get('length'), 0, 'The tag store should be empty initially');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 0, 'The secret store should be empty initially');\n\n                return service.fetchSecrets('token', '', 123);\n            }).then(function (result) {\n                assert.equal(result.secrets.length, 2, 'There should be two secrets in the results');\n                assert.equal(result.secrets[0].get('id'), '1', 'The id attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('service'), '1.example.com', 'The service attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('account'), 'john', 'The account attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('secret'), 's3cr3t1', 'The secret attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('notes'), 'example notes', 'The notes attribute of the first secret should match');\n                assert.equal(result.secrets[0].get('tags'), 'tag1 tag2', 'The tags attribute of the first secret should match');\n\n                assert.equal(result.secrets[1].get('id'), '2', 'The id attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('service'), '2.example.com', 'The service attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('account'), 'john', 'The account attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('secret'), 's3cr3t2', 'The secret attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('notes'), '', 'The notes attribute of the second secret should match');\n                assert.equal(result.secrets[1].get('tags'), 'tag1', 'The tags attribute of the second secret should match');\n\n                assert.equal(result.tags.length, 2, 'There should be two tags in the results');\n                assert.equal(result.tags[0].get('name'), 'tag1', 'The name attribute of the first tag should match');\n                assert.equal(result.tags[0].get('count'), 2, 'The count attribute of the first tag should match');\n\n                assert.equal(result.tags[1].get('name'), 'tag2', 'The name attribute of the second tag should match');\n                assert.equal(result.tags[1].get('count'), 1, 'The count attribute of the second tag should match');\n\n                return service.get('store').findAll('secret');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecretsStore the store should contain two secrets');\n\n                return service.get('store').findAll('tag');\n            }).then(function (results) {\n                assert.equal(results.get('length'), 2, 'After the call to updateSecretsStore the store should contain two tags');\n                done();\n            });\n        });\n    });\n\n});","define('yith-library-mobile-client/tests/integration/sync-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - integration');\n  test('integration/sync-test.js should pass jshint', function() { \n    ok(true, 'integration/sync-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/main.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('main.js should pass jshint', function() { \n    ok(true, 'main.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/models/account.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/account.js should pass jshint', function() { \n    ok(true, 'models/account.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/models/secret.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/secret.js should pass jshint', function() { \n    ok(true, 'models/secret.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/models/tag.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/tag.js should pass jshint', function() { \n    ok(true, 'models/tag.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/first-time.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/first-time.js should pass jshint', function() { \n    ok(true, 'routes/first-time.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/secret.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/secret.js should pass jshint', function() { \n    ok(true, 'routes/secret.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/secrets-drawer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/secrets-drawer.js should pass jshint', function() { \n    ok(true, 'routes/secrets-drawer.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/secrets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/secrets.js should pass jshint', function() { \n    ok(true, 'routes/secrets.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/secrets/drawer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/secrets');\n  test('routes/secrets/drawer.js should pass jshint', function() { \n    ok(true, 'routes/secrets/drawer.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/routes/secrets/tags.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/secrets');\n  test('routes/secrets/tags.js should pass jshint', function() { \n    ok(true, 'routes/secrets/tags.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/services/auth.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/auth.js should pass jshint', function() { \n    ok(true, 'services/auth.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/services/settings.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/settings.js should pass jshint', function() { \n    ok(true, 'services/settings.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/services/sync.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/sync.js should pass jshint', function() { \n    ok(true, 'services/sync.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/test-helper', ['yith-library-mobile-client/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('yith-library-mobile-client/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/test-loader', ['ember'], function (Ember) {\n\n  'use strict';\n\n  /* globals requirejs,require */\n  Ember['default'].keys(requirejs.entries).forEach(function (entry) {\n    if (/\\-test/.test(entry)) {\n      require(entry, null, null, true);\n    }\n  });\n\n});","define('yith-library-mobile-client/tests/test-loader.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-loader.js should pass jshint', function() { \n    ok(true, 'test-loader.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('yith-library-mobile-client/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/unit/controllers/first-time-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('controller:first-time', 'Unit | Controller | first-time');\n\n    ember_qunit.test('The initial value for step is 0', function (assert) {\n        var ctrl = this.subject();\n        assert.expect(11);\n\n        assert.equal(ctrl.get('step'), 0, 'The step property should be 0 initially');\n        assert.equal(ctrl.get('showInstructions'), true, 'The showInstructions property is true when step is 0');\n        assert.equal(ctrl.get('isConnectingToServer'), false, 'The isConnectingToServer property is false when step is 0');\n        assert.equal(ctrl.get('isServerConnected'), false, 'The isServerConnected property is false when step is 0');\n        assert.equal(ctrl.get('isGettingAccountInformation'), false, 'The isGettingAccountInformation property is false when step is 0');\n        assert.equal(ctrl.get('isAccountInformationRetrieved'), false, 'The isAccountInformationRetrieved property is false when step is 0');\n        assert.equal(ctrl.get('accountDisabled'), 'true', 'The accountDisabled property is \"true\" when step is 0');\n        assert.equal(ctrl.get('isGettingSecrets'), false, 'The isGettingSecrets property is false when step is 0');\n        assert.equal(ctrl.get('areSecretsRetrieved'), false, 'The areSecretsRetrieved property is false when step is 0');\n        assert.equal(ctrl.get('secretsDisabled'), 'true', 'The secretsDisabled property is \"true\" when step is 0');\n        assert.equal(ctrl.get('isFinished'), false, 'The isFinished property is false when step is 0');\n    });\n\n    ember_qunit.test('When step is 1 the server is being connected', function (assert) {\n        var ctrl = this.subject();\n        assert.expect(11);\n\n        ctrl.incrementProperty('step');\n\n        assert.equal(ctrl.get('step'), 1, 'The step property should be 1 after incrementing it once');\n        assert.equal(ctrl.get('showInstructions'), false, 'The showInstructions property is false when step is 1');\n        assert.equal(ctrl.get('isConnectingToServer'), true, 'The isConnectingToServer property is true when step is 1');\n        assert.equal(ctrl.get('isServerConnected'), false, 'The isServerConnected property is false when step is 1');\n        assert.equal(ctrl.get('isGettingAccountInformation'), false, 'The isGettingAccountInformation property is false when step is 1');\n        assert.equal(ctrl.get('isAccountInformationRetrieved'), false, 'The isAccountInformationRetrieved property is false when step is 1');\n        assert.equal(ctrl.get('accountDisabled'), 'true', 'The accountDisabled property is \"true\" when step is 1');\n        assert.equal(ctrl.get('isGettingSecrets'), false, 'The isGettingSecrets property is false when step is 1');\n        assert.equal(ctrl.get('areSecretsRetrieved'), false, 'The areSecretsRetrieved property is false when step is 1');\n        assert.equal(ctrl.get('secretsDisabled'), 'true', 'The secretsDisabled property is \"true\" when step is 1');\n        assert.equal(ctrl.get('isFinished'), false, 'The isFinished property is false when step is 1');\n    });\n\n    ember_qunit.test('When step is 2 the account information is being retrieved', function (assert) {\n        var ctrl = this.subject();\n        assert.expect(11);\n\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n\n        assert.equal(ctrl.get('step'), 2, 'The step property should be 2 after incrementing it twice');\n        assert.equal(ctrl.get('showInstructions'), false, 'The showInstructions property is false when step is 2');\n        assert.equal(ctrl.get('isConnectingToServer'), false, 'The isConnectingToServer property is false when step is 2');\n        assert.equal(ctrl.get('isServerConnected'), true, 'The isServerConnected property is true when step is 2');\n        assert.equal(ctrl.get('isGettingAccountInformation'), true, 'The isGettingAccountInformation property is true when step is 2');\n        assert.equal(ctrl.get('isAccountInformationRetrieved'), false, 'The isAccountInformationRetrieved property is false when step is 2');\n        assert.equal(ctrl.get('accountDisabled'), 'false', 'The accountDisabled property is \"false\" when step is 2');\n        assert.equal(ctrl.get('isGettingSecrets'), false, 'The isGettingSecrets property is false when step is 2');\n        assert.equal(ctrl.get('areSecretsRetrieved'), false, 'The areSecretsRetrieved property is false when step is 2');\n        assert.equal(ctrl.get('secretsDisabled'), 'true', 'The secretsDisabled property is \"true\" when step is 2');\n        assert.equal(ctrl.get('isFinished'), false, 'The isFinished property is false when step is 2');\n    });\n\n    ember_qunit.test('When step is 3 the secrets are being retrieved', function (assert) {\n        var ctrl = this.subject();\n        assert.expect(11);\n\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n\n        assert.equal(ctrl.get('step'), 3, 'The step property should be 3 after incrementing it three times');\n        assert.equal(ctrl.get('showInstructions'), false, 'The showInstructions property is false when step is 3');\n        assert.equal(ctrl.get('isConnectingToServer'), false, 'The isConnectingToServer property is false when step is 3');\n        assert.equal(ctrl.get('isServerConnected'), true, 'The isServerConnected property is true when step is 3');\n        assert.equal(ctrl.get('isGettingAccountInformation'), false, 'The isGettingAccountInformation property is false when step is 3');\n        assert.equal(ctrl.get('isAccountInformationRetrieved'), true, 'The isAccountInformationRetrieved property is true when step is 3');\n        assert.equal(ctrl.get('accountDisabled'), 'false', 'The accountDisabled property is \"false\" when step is 3');\n        assert.equal(ctrl.get('isGettingSecrets'), true, 'The isGettingSecrets property is true when step is 3');\n        assert.equal(ctrl.get('areSecretsRetrieved'), false, 'The areSecretsRetrieved property is false when step is 3');\n        assert.equal(ctrl.get('secretsDisabled'), 'false', 'The secretsDisabled property is \"false\" when step is 3');\n        assert.equal(ctrl.get('isFinished'), false, 'The isFinished property is false when step is 3');\n    });\n\n    ember_qunit.test('When step is 4 everything is done', function (assert) {\n        var ctrl = this.subject();\n        assert.expect(11);\n\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n        ctrl.incrementProperty('step');\n\n        assert.equal(ctrl.get('step'), 4, 'The step property should be 4 after incrementing it four times');\n        assert.equal(ctrl.get('showInstructions'), false, 'The showInstructions property is false when step is 4');\n        assert.equal(ctrl.get('isConnectingToServer'), false, 'The isConnectingToServer property is false when step is 4');\n        assert.equal(ctrl.get('isServerConnected'), true, 'The isServerConnected property is true when step is 4');\n        assert.equal(ctrl.get('isGettingAccountInformation'), false, 'The isGettingAccountInformation property is false when step is 4');\n        assert.equal(ctrl.get('isAccountInformationRetrieved'), true, 'The isAccountInformationRetrieved property is true when step is 4');\n        assert.equal(ctrl.get('accountDisabled'), 'false', 'The accountDisabled property is \"false\" when step is 4');\n        assert.equal(ctrl.get('isGettingSecrets'), false, 'The isGettingSecrets property is false when step is 4');\n        assert.equal(ctrl.get('areSecretsRetrieved'), true, 'The areSecretsRetrieved property is true when step is 4');\n        assert.equal(ctrl.get('secretsDisabled'), 'false', 'The secretsDisabled property is \"false\" when step is 4');\n        assert.equal(ctrl.get('isFinished'), true, 'The isFinished property is true when step is 4');\n    });\n\n});","define('yith-library-mobile-client/tests/unit/controllers/first-time-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/first-time-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/first-time-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/unit/services/auth-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('service:auth', 'Unit | Service | auth', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n});","define('yith-library-mobile-client/tests/unit/services/auth-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/auth-test.js should pass jshint', function() { \n    ok(true, 'unit/services/auth-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/unit/services/settings-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('service:settings', 'Unit | Service | settings', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n});","define('yith-library-mobile-client/tests/unit/services/settings-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/settings-test.js should pass jshint', function() { \n    ok(true, 'unit/services/settings-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/unit/services/sync-test', ['ember-qunit', 'ic-ajax'], function (ember_qunit, ic_ajax) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('service:sync', 'Unit | Service | sync', {\n        needs: ['model:account']\n    });\n\n    ember_qunit.test('convertRecord', function (assert) {\n        var service = this.subject(),\n            original = { foo_bar: 1 },\n            expected = { fooBar: 1 },\n            result = service.convertRecord(original);\n\n        assert.deepEqual(result, expected);\n    });\n\n    ember_qunit.test('getUserInfo', function (assert) {\n        var service = this.subject(),\n            expectedData = {\n            'id': 123,\n            'email': 'test@example.com',\n            'first_name': 'John',\n            'last_name': 'Doe',\n            'screen_name': 'Johnny'\n        };\n        assert.expect(1);\n        ic_ajax.defineFixture('/user?client_id=123', {\n            response: expectedData,\n            jqXHR: {},\n            textStatus: 'success'\n        });\n        service.getUserInfo('token', '', 123).then(function (data) {\n            assert.deepEqual(data, expectedData);\n        });\n    });\n\n    ember_qunit.test('getSecrets', function (assert) {\n        var service = this.subject(),\n            expectedData = {\n            passwords: [{\n                id: 1,\n                service: 'example.com',\n                account: 'john',\n                secret: 's3cr3t',\n                notes: '',\n                tags: []\n            }, {\n                id: 2,\n                service: 'mail.example.com',\n                account: 'john',\n                secret: 's3cr3t',\n                notes: '',\n                tags: ['tag1', 'tag2']\n            }]\n        };\n        assert.expect(1);\n        ic_ajax.defineFixture('/passwords?client_id=123', {\n            response: expectedData,\n            jqXHR: {},\n            textStatus: 'success'\n        });\n        service.getSecrets('token', '', '123').then(function (data) {\n            assert.deepEqual(data, expectedData);\n        });\n    });\n\n});","define('yith-library-mobile-client/tests/unit/services/sync-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/sync-test.js should pass jshint', function() { \n    ok(true, 'unit/services/sync-test.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/utils/prefix-event.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/prefix-event.js should pass jshint', function() { \n    ok(true, 'utils/prefix-event.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/utils/snake-case-to-camel-case.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/snake-case-to-camel-case.js should pass jshint', function() { \n    ok(true, 'utils/snake-case-to-camel-case.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/tests/views/secrets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/secrets.js should pass jshint', function() { \n    ok(true, 'views/secrets.js should pass jshint.'); \n  });\n\n});","define('yith-library-mobile-client/utils/prefix-event', ['exports'], function (exports) {\n\n    'use strict';\n\n    exports['default'] = prefixEvent;\n\n    function prefixEvent(event) {\n        var vendorPrefixes = ['webkit', 'moz', 'MS', 'o', ''];\n        var prefixedEventNames = vendorPrefixes.map(function (prefix) {\n            return prefix ? prefix + event : event.toLowerCase();\n        });\n        return prefixedEventNames.join(' ');\n    }\n\n});","define('yith-library-mobile-client/utils/snake-case-to-camel-case', ['exports'], function (exports) {\n\n    'use strict';\n\n    exports['default'] = snakeCaseToCamelCase;\n\n    function snakeCaseToCamelCase(symbol) {\n        return symbol.split('_').filter(function (word) {\n            return word !== '';\n        }).map(function (word, idx) {\n            if (idx === 0) {\n                return word;\n            } else {\n                return word.charAt(0).toUpperCase() + word.slice(1);\n            }\n        }).join('');\n    }\n\n});","define('yith-library-mobile-client/views/secrets', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNames: ['full-height'],\n\n        didInsertElement: function didInsertElement() {\n            window.addEventListener('offline', this);\n            window.addEventListener('online', this);\n        },\n\n        handleEvent: function handleEvent(event) {\n            switch (event.type) {\n                case 'offline':\n                    this.get('controller').send('offline');\n                    break;\n                case 'online':\n                    this.get('controller').send('online');\n                    break;\n            }\n        },\n\n        willDestroy: function willDestroy() {\n            window.removeEventListener('offline', this);\n            window.removeEventListener('online', this);\n        }\n    });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('yith-library-mobile-client/config/environment', ['ember'], function(Ember) {\n  var prefix = 'yith-library-mobile-client';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"yith-library-mobile-client/tests/test-helper\");\n} else {\n  require(\"yith-library-mobile-client/app\")[\"default\"].create({\"version\":\"@@projectVersion\",\"name\":\"yith-library-mobile-client\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpzxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjn8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlynIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnldxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"yith-library-mobile-client.js"}